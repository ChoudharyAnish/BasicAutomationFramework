name: 🕐 Scheduled Production Tests

on:
  # Daily execution at 7:30 PM IST (2:00 PM UTC)
  schedule:
    - cron: '0 14 * * *'  # 7:30 PM IST daily
  
  # Manual trigger option
  workflow_dispatch:
    inputs:
      test_environment:
        description: 'Test Environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      
      notify_telegram:
        description: 'Send Telegram Notifications'
        required: true
        default: true
        type: boolean

jobs:
  production-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📦 Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🏗️ Build Project
      run: mvn clean compile
      
    - name: 🚀 Setup Chrome for Selenium
      uses: browser-actions/setup-chrome@latest
      
    - name: 🧪 Run Production Tests
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        # Update config with secrets
        sed -i "s/YOUR_BOT_TOKEN_HERE/$TELEGRAM_BOT_TOKEN/g" src/main/resources/config.properties
        sed -i "s/YOUR_CHAT_ID_HERE/$TELEGRAM_CHAT_ID/g" src/main/resources/config.properties
        
        # Set CI environment flag
        sed -i "s/ci.environment=false/ci.environment=true/g" src/main/resources/config.properties
        
        # Run tests with headless browser
        sed -i "s/headless=false/headless=true/g" src/main/resources/config.properties
        
        # Execute tests
        mvn test
        
    - name: 📊 Upload Test Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-${{ github.run_number }}
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 30
        
    - name: 📸 Upload Screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: failure-screenshots-${{ github.run_number }}
        path: test-output/screenshots/
        retention-days: 7
        
    - name: 🏃‍♂️ Test Results Summary
      if: always()
      run: |
        echo "## 🧪 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.test_environment || 'production' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "target/surefire-reports/testng-results.xml" ]; then
          echo "- **Results**: Available in artifacts" >> $GITHUB_STEP_SUMMARY
        fi
