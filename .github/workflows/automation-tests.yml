name: Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'SmokeTests'
        type: choice
        options:
        - SmokeTests
        - RegressionTests
        - DataDrivenTests
      browser:
        description: 'Browser to use'
        required: true
        default: 'chrome'
        type: choice
        options:
        - chrome

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
        
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@v2
      
    - name: Display Chrome version
      run: |
        google-chrome --version
        chromedriver --version
        
    - name: Generate test data
      run: mvn compile exec:java -Dexec.mainClass="org.example.utils.ExcelDataGenerator"
      
    - name: Run tests
      run: |
        if [ "${{ github.event.inputs.test_suite }}" != "" ]; then
          mvn clean test -Dtest.suite="${{ github.event.inputs.test_suite }}" -Dci.environment=true
        else
          mvn clean test -Dci.environment=true
        fi
      env:
        CI: true
        
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: target/allure-results
        allure_history: allure-history
        keep_reports: 20
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.java-version }}
        path: |
          test-output/
          target/surefire-reports/
          
    - name: Upload ExtentReports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: extent-reports-${{ matrix.java-version }}
        path: test-output/ExtentReports/
        
    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ matrix.java-version }}
        path: test-output/screenshots/
        
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Comment PR with test results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const fs = require('fs');
          const path = 'target/surefire-reports/';
          
          if (fs.existsSync(path)) {
            const files = fs.readdirSync(path);
            const xmlFiles = files.filter(file => file.endsWith('.xml'));
            
            let comment = '## 🧪 Test Results\n\n';
            comment += `- **Total test files**: ${xmlFiles.length}\n`;
            comment += `- **Workflow**: ${context.workflow}\n`;
            comment += `- **Run ID**: ${context.runId}\n\n`;
            comment += '📊 Detailed reports are available in the workflow artifacts.\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.test.result == 'success'
      run: echo "✅ All tests passed successfully!"
      
    - name: Notify on failure
      if: needs.test.result == 'failure'
      run: echo "❌ Some tests failed. Check the artifacts for details."
